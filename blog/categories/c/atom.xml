<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: C | Kyle Rogers]]></title>
  <link href="http://keroger2k.github.io/blog/categories/c/atom.xml" rel="self"/>
  <link href="http://keroger2k.github.io/"/>
  <updated>2014-03-29T21:51:14-05:00</updated>
  <id>http://keroger2k.github.io/</id>
  <author>
    <name><![CDATA[Kyle Rogers]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Enums to SelectList]]></title>
    <link href="http://keroger2k.github.io/blog/2012/09/20/enums-to-selectlist/"/>
    <updated>2012-09-20T16:48:00-05:00</updated>
    <id>http://keroger2k.github.io/blog/2012/09/20/enums-to-selectlist</id>
    <content type="html"><![CDATA[<p>Recently I had an interview where I was sharing my screen to a couple people who were watching me struggle through the simple task they had me complete.  I had to create a simple drop down list that contain three values and my first thought for whatever reason was to use an Enum and just bind that to a drop down list with the HTML helper object.  However, it had been awhile since I had actually had to do that and after about 1 minute of trying to get it to work I simply gave up and moved on as  I was on the clock.  After the interview I looked back at some code that I currently maintain and found my solution.  It definitely brought back some of the pain that went into the initial implementation.  Although the answer is quite simple, during the pressure of an interview I just couldn&rsquo;t recall.
Basically, I just used a generic extension method off of type TEnum.  This allows you to just reference a single value of the Enum do a ToSelectList();</p>

<p><div><script src='https://gist.github.com/3726104.js?file=EnumExtensions.cs'></script>
<noscript><pre><code>
    public static SelectList ToSelectList&lt;TEnum&gt;(this TEnum enumObj) 
    {

        var values = from TEnum e in Enum.GetValues(typeof(TEnum))
                     select new { Value = e, Text = e.ToString() };

        return new SelectList(values, &quot;Value&quot;, &quot;Text&quot;, enumObj);
    }</code></pre></noscript></div>
</p>

<p>Here is an example usage:</p>

<p><div><script src='https://gist.github.com/3726104.js?file=HomeController.cs'></script>
<noscript><pre><code>  
    public enum QueryTypes
    {
        Web,
        Images,
        Documents
    }


    public class HomeController : Controller
    {
        public ActionResult Index()
        {
            ViewBag.Select = typeof(QueryTypes).ToSelectList();
            return View();
        }
    }</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
